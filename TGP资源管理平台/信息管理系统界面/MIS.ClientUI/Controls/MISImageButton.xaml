<ResourceDictionary               
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mis="clr-namespace:MIS.ClientUI.Controls"
             mc:Ignorable="d" >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MIS.ClientUI;component/Themes/Corlors.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="DefaultImageButtonStyle" TargetType="{x:Type mis:MISImageButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type mis:MISImageButton}">
                    <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" BorderBrush="#FFD3DBDE" Background="#FFF1F5F7">
                        <StackPanel Margin="0" Orientation="Horizontal">
                        	<Image HorizontalAlignment="Stretch" Height="{TemplateBinding IconHeight}" Margin="5,0,2,0" VerticalAlignment="Stretch" Source="{TemplateBinding Source}" Width="{TemplateBinding IconWidth}"/>
                        	<TextBlock x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" Height="Auto" Text="{TemplateBinding Content}"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF00B0DF"/>
                            <Setter Property="Foreground" TargetName="contentPresenter" Value="#FF00B0DF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="Foreground" TargetName="contentPresenter" Value="#FF00B0DF"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF00B0DF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DefaultImageButton2Style" TargetType="{x:Type mis:MISImageButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
		<Setter Property="Width" Value="73"/>
		<Setter Property="Height" Value="80"/>
		<Setter Property="Source" Value="/MIS.ClientUI;component/images/ico01.png"/>
		<Setter Property="Content" Value="管理设置"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type mis:MISImageButton}">
                    <Border x:Name="border" SnapsToDevicePixels="true" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" VerticalAlignment="Stretch">
                        <Grid Margin="0" >
                        	<Grid.RowDefinitions>
                        		<RowDefinition Height="15"/>
                        		<RowDefinition/>
                        		<RowDefinition Height="22"/>
                        	</Grid.RowDefinitions>
                            <Rectangle Fill="Transparent" HorizontalAlignment="Left" Height="80" Grid.RowSpan="3" Stroke="Transparent" VerticalAlignment="Top" Width="73"/>
                        	<Image HorizontalAlignment="Stretch" Height="32" Margin="0" VerticalAlignment="Stretch" Source="{TemplateBinding Source}" Stretch="Uniform" Width="32" Grid.Row="1"/>
                        	<TextBlock x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="12.5,3.38" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="15.24" Text="{TemplateBinding Content}" Grid.Row="2" Width="48"/>
                    	</Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF00B0DF"/>
                            <Setter Property="Foreground" TargetName="contentPresenter" Value="#FF42B4A9"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Foreground" TargetName="contentPresenter" Value="#FF42B4A9"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF00B0DF"/>
                            <Setter Property="Margin" TargetName="contentPresenter" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>