<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
	x:Class="MIS.ClientUI.ExpanderUI"
	x:Name="Window"
	Title="ExpanderUI"
	Width="640" Height="480">

<Window.Resources>    
            <!--    
            ToogleButton的模板，    
            因为要进和状态切换，故要用到ToggleButton控件    
            -->    
            <ControlTemplate x:Key="ToggleButtonTemp" TargetType="{x:Type ToggleButton}">    
            	<Border x:Name="bd"    
            		BorderThickness="0"    
            		CornerRadius="0" Background="Transparent">    
            		<Border.BorderBrush>    
            			<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">    
            				<GradientStop Color="Black" Offset="0"/>    
            				<GradientStop Color="Gray" Offset="1"/>    
            			</LinearGradientBrush>    
            		</Border.BorderBrush>    
            		<Path Margin="2,2,2,2" Fill="Black" x:Name="p"    
            			Data="M 0,0 L 4,5 L8,0 Z"    
            			HorizontalAlignment="Center"    
            			VerticalAlignment="Center" StrokeThickness="0"/>    
            	</Border>    
                <ControlTemplate.Triggers>    
                    <Trigger Property="IsMouseOver" Value="True">    
                        <Setter TargetName="bd" Property="Background">    
                            <Setter.Value>    
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">    
                                    <GradientStop Color="LightGreen" Offset="0"/>    
                                    <GradientStop Color="White" Offset="1"/>    
                                </LinearGradientBrush>    
                            </Setter.Value>    
                        </Setter>    
                    </Trigger>    
                    <Trigger Property="IsChecked" Value="True">    
                        <Setter TargetName="p" Property="Data"    
                                    Value="M0,5 L8,5 L4,0 Z"/>    
                    </Trigger>    
                    <Trigger Property="IsEnabled" Value="True">    
                        <Setter TargetName="bd" Property="BorderBrush" Value="Gray"/>    
                        <Setter TargetName="p" Property="Fill" Value="Gray"/>    
                    </Trigger>    
                </ControlTemplate.Triggers>    
            </ControlTemplate>    
            <!--  
                Expnder的样式  
            -->    
            <Style TargetType="{x:Type Expander}">    
                <Setter Property="Template">    
                    <Setter.Value>    
                        <ControlTemplate TargetType="{x:Type Expander}">    
                        	<Grid>    
                        		<Grid.RowDefinitions>    
                        			<RowDefinition Height="35"/>    
                        			<RowDefinition x:Name="gr" Height="0"/>    
                        		</Grid.RowDefinitions>    
                        		<BulletDecorator  FlowDirection="RightToLeft" Background="#FFD4E7F0" Grid.Row="0" VerticalAlignment="Stretch" >    
                        			<BulletDecorator.Bullet>    
                        				<ToggleButton Margin="1,1,1,1"  Height="18" Width="18" Template="{StaticResource ToggleButtonTemp}"    
                        					IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"    
                        					OverridesDefaultStyle="True"/>    
                        			</BulletDecorator.Bullet>    
                        			<ContentPresenter FlowDirection="LeftToRight" HorizontalAlignment="Right" Margin="1,1,1,1" ContentSource="Header"/>    
                        		</BulletDecorator>    
                        		<Border x:Name="scv" Background="LightGray" BorderThickness="0" BorderBrush="Black" Grid.Row="1" >    
                        			<ContentPresenter Margin="0" ContentSource="Content"/>    
                        		</Border>    
                        	</Grid>    
                            <ControlTemplate.Triggers>    
                                <Trigger Property="IsExpanded" Value="True">    
                                    <Setter TargetName="gr" Property="Height" Value="{Binding DesiredSize/Height, ElementName=scv}"/>    
                                </Trigger>    
                            </ControlTemplate.Triggers>    
                        </ControlTemplate>    
                    </Setter.Value>    
                </Setter>    
            </Style>
	<Style x:Key="FocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
	<SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
	<SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
	<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
	<SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
	<SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
	<SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
	<SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
	<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
	<Style x:Key="ExpanderUIItem" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="30,0,0,0">
							<Path  Fill="Black" Data="M-29.27-24.289v1074.948l643.806-543.184-643.806-531.764z" Stretch="Fill" Width="5" Height="6" Margin="5,0"/>
							<TextBlock x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="100" Text="{TemplateBinding Content}"/>
						</StackPanel>            					
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDefaulted" Value="true">
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Foreground" TargetName="contentPresenter" Value="#FFF"/>
							<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
							<Setter Property="Background" TargetName="border">
								<Setter.Value>
									<ImageBrush ImageSource="images/libg.png"/>
								</Setter.Value>
							</Setter> 
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
							<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>    
        </Window.Resources>    
	<Grid>    
		<Expander  OverridesDefaultStyle="True" Margin="0,0,328,0">    
			<Expander.Header>    
				<StackPanel Orientation="Horizontal" Margin="10,0,0,0">
					<Image Source="images/leftico01.png" Width="16" Height="16"/>
					<TextBlock Text="管理信息" FontWeight="Bold" FontSize="12" Margin="8,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>    
				</StackPanel>
			</Expander.Header>    
			<StackPanel Margin="0">
				<Button Content="首页模版" HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="186" Style="{DynamicResource ExpanderUIItem}" d:IsHidden="True"/>
				<Button HorizontalAlignment="Left" Height="30" Margin="0" VerticalAlignment="Top" Width="186" Style="{DynamicResource ExpanderUIItem}" Content="数据列表" d:IsHidden="True"/>
				<Button HorizontalAlignment="Left" Height="30" Margin="0" VerticalAlignment="Top" Width="186" Style="{DynamicResource ExpanderUIItem}" Content="数据列表" d:IsHidden="True"/>
				<Button HorizontalAlignment="Left" Height="30" Margin="0" VerticalAlignment="Top" Width="186" Style="{DynamicResource ExpanderUIItem}" Content="数据列表" d:IsHidden="True"/>
				<Button HorizontalAlignment="Left" Height="30" Margin="0" VerticalAlignment="Top" Width="186" Style="{DynamicResource ExpanderUIItem}" Content="数据列表" d:IsHidden="True"/>
				<Button HorizontalAlignment="Left" Height="30" Margin="0" VerticalAlignment="Top" Width="186" Style="{DynamicResource ExpanderUIItem}" Content="数据列表" d:IsHidden="True"/>
			</StackPanel>    
		</Expander>
		
		
	</Grid>    
</Window>