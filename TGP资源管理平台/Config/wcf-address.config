<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <system.serviceModel>
    <services>
      <service name="MyService" >
        <endpoint address="http://localhost:1111/calculatorservice" listenUri="http://localhost:6666/calculatorservice"/>
        <endpoint address="http://localhost:1112/calculatorservice" listenUri="http://localhost:6666/calculatorservice"/>
        <endpoint address="http://localhost:1113/calculatorservice" />
        <!--
              根据上面MyService分析链接请求监听，延伸理解(终结点)Endpoint
               1、首先在这个Service(服务)中包含3个终结点，终结点会创建3个终结点分发器(EndpointDispatcher)；
               2、2个监听地址(http://localhost:6666/calculatorservice、http://localhost:1113/calculatorservice)；
               3、根据监听地址(2个监听地址)WCF会创建2个信道分发器(ChanelDispatcher)，每个信道分发器包含自己的信道监听器(ChanelListener)；
               
                流程：当信道分发器(ChanelDispatcher)通过信道监听器(ChanelListener)接收到消息时(这些消息是指接收到客户端的请求？我目前的猜测)，
                将会根据消息(SOAP消息)自身携带的信息选择与消息匹配的终结点分发器(EndpointDispatcher)；
                
                简单描述：首先服务启动的时候根据配置，创建信道分发器，信道监听以及终结点分发器，当客户端请求的消息根据约定封装成指定的SOAP消息格式发送到服务，信道分发器中的信道监听器就会接收到这个SOAP消息，
                然后信道监听分发器会根据SOAP消息中携带的信息去匹配(使用消息筛选器完成)终结点分发器，匹配完终结点分发器后建立请求通道，然后完成这次服务的请求与返回(目前这些是属于个人理解，后面再深入时，可能会推翻前面的理解)。
                
                 address与listenUri：简单理解一个是外部公布地址，另一个是内部监听地址也就是所谓的逻辑地址和物理地址；
                 
                 
        
        -->
        
      </service>
    </services>
  </system.serviceModel>
</configuration>