<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tgp="clr-namespace:TGP.WindowDemo"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"  
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
                    >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/TGP.WindowDemo;component/Themes/Color.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="ButtonBaseTemplate" TargetType="{x:Type tgp:GButton}">
        <Border x:Name="PART_Inner" 
                Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Background}" 
                Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Height}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Width}" 
                CornerRadius="{TemplateBinding GCornerRadius}" VerticalAlignment="Stretch">
            <!--图标\文本-->
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" >
                <Image x:Name="PART_Icon" Width="{TemplateBinding IconWidth}" Height="{TemplateBinding IconHeight}"  Source="{TemplateBinding GIcon}" Margin="{TemplateBinding GIconMargin}" VerticalAlignment="Center" HorizontalAlignment="Left" Stretch="Fill" StretchDirection="DownOnly" >
                    <Image.RenderTransformOrigin>
                        <Point X="0.5" Y="0.5"/>
                    </Image.RenderTransformOrigin>
                    <Image.RenderTransform>
                        <RotateTransform x:Name="transIcon" Angle="0"/>
                    </Image.RenderTransform>
                </Image>
                <TextBlock x:Name="PART_Txt"  VerticalAlignment="Center" 
                            Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}"  
                            FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FontSize}" 
                            Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}" 
                            Margin="2,0,0,0" HorizontalAlignment="Left"/>
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <!--设置鼠标进入时的背景、前景样式-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_Inner" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path= MouseOverBackground}"/>
                <Setter TargetName="PART_Inner" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path= MouseOverBorderBrush}"/>
                <Setter TargetName="PART_Txt" Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path= MouseOverForeground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="PART_Inner" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path= PressedBackground}"/>
                <Setter TargetName="PART_Inner" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path= PressedBorderBrush}"/>
                <Setter TargetName="PART_Txt" Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path= PressedForeground}"/>
            </Trigger>
            <!--设置GIcon的动画触发器-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="AllowsAnimation" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="180" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ButtonGeometryBaseTemplate" TargetType="{x:Type tgp:GButton}">
        <Border x:Name="PART_Inner" 
                Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Background}" 
                Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Height}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Width}" 
                CornerRadius="{TemplateBinding GCornerRadius}" VerticalAlignment="Stretch">
            <!--图标\文本-->
            <Grid>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="{TemplateBinding Margin}" HorizontalAlignment="Center" >
                    <Path x:Name="PART_Icon"  Data="{TemplateBinding GeometryIcon}"
                                  Fill="{StaticResource DefaultButtonForeground}" 
                                  HorizontalAlignment="Stretch" Stretch="Fill" 
                                  Stroke="{StaticResource DefaultButtonForeground}"
                                  Margin="1"
                                  VerticalAlignment="Stretch" Width="16" Height="16"
                                  RenderTransformOrigin="0.5,0.5">
                        <Path.RenderTransform>
                            <RotateTransform x:Name="transIcon" Angle="0"/>
                        </Path.RenderTransform>
                    </Path>
                    <TextBlock x:Name="PART_Txt"  VerticalAlignment="Center" 
                            Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}"  
                            FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FontSize}" 
                            Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}" 
                            Margin="2,0,0,0"/>
                </StackPanel>
                <Rectangle Fill="Transparent" HorizontalAlignment="Stretch"/>
            </Grid>

        </Border>
        <ControlTemplate.Triggers>
            <!--设置鼠标进入时的背景、前景样式-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_Inner" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path= MouseOverBackground}"/>
                <Setter TargetName="PART_Inner" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path= MouseOverBorderBrush}"/>
                <Setter TargetName="PART_Icon" Property="Stroke" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path= MouseOverForeground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="PART_Inner" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path= PressedBackground}"/>
                <Setter TargetName="PART_Inner" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path= PressedBorderBrush}"/>
                <Setter TargetName="PART_Icon" Property="Stroke" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path= PressedForeground}"/>
            </Trigger>
            <!--设置GIcon的动画触发器-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="AllowsAnimation" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="180" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ButtonImageBaseTemplate" TargetType="{x:Type tgp:GButton}">
        <Grid Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}" Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}}" >
    		<Border x:Name="PART_Inner" 
    			 VerticalAlignment="Stretch">
    			<!--图标\文本-->
    			<Grid Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
    				<Rectangle Fill="Transparent" HorizontalAlignment="Stretch"/>
    				<Image Margin="{TemplateBinding GIconMargin}" x:Name="transIcon" Width="Auto"  VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5"  HorizontalAlignment="Center" Source="{TemplateBinding GIcon}" Stretch="Fill"/>
    			</Grid>
    		</Border>
    		<Border x:Name="PART_bg" BorderBrush="{TemplateBinding BorderBrush}" 
			 Background="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}}"   			
    			CornerRadius="{TemplateBinding GCornerRadius}" BorderThickness="{TemplateBinding BorderThickness}"  HorizontalAlignment="Stretch" 
				 VerticalAlignment="Stretch" />
    	</Grid>
        <ControlTemplate.Triggers>
    		<Trigger Property="IsFocused" Value="True">
    			<Setter TargetName="PART_bg" Property="BorderBrush" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
			</Trigger>
    		<!--设置鼠标进入时的背景、前景样式-->
    		<Trigger Property="IsMouseOver" Value="True">
    			<Setter TargetName="PART_Inner" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
    			<Setter TargetName="PART_bg" Property="BorderBrush" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
    		</Trigger>
    		<Trigger Property="IsPressed" Value="True">
    			<Setter TargetName="PART_Inner" Property="Background" Value="{Binding PressedBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
    			<Setter TargetName="PART_bg" Property="BorderBrush" Value="{Binding PressedBorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
    		</Trigger>
    		<!--设置GIcon的动画触发器-->
    		<MultiTrigger>
    			<MultiTrigger.Conditions>
    				<Condition Property="IsMouseOver" Value="True"/>
    				<Condition Property="AllowsAnimation" Value="True"/>
    			</MultiTrigger.Conditions>
    			<MultiTrigger.EnterActions>
    				<BeginStoryboard>
    					<Storyboard>
    						<DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="180" Duration="0:0:0.2" />
    					</Storyboard>
    				</BeginStoryboard>
    			</MultiTrigger.EnterActions>
    			<MultiTrigger.ExitActions>
    				<BeginStoryboard>
    					<Storyboard>
    						<DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.2" />
    					</Storyboard>
    				</BeginStoryboard>
    			</MultiTrigger.ExitActions>
    		</MultiTrigger>
    	</ControlTemplate.Triggers>
    </ControlTemplate>



    <!-- 默认窗体样式 无边框、无圆角-->
    <Style x:Key="DefaultButtonStyle" TargetType="{x:Type tgp:GButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="28" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="Background" Value="{StaticResource DefaultButtonBackground}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultButtonForeground}" />
        <Setter Property="BorderBrush" Value="{StaticResource DefaultButtonBorderBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="PressedBackground" Value="{StaticResource ButtonPressedBackground}"/>
        <Setter Property="PressedForeground" Value="{StaticResource ButtonPressedForeround}"/>
        <Setter Property="PressedBorderBrush" Value="{StaticResource ButtonPressedBorderBrush}"/>
        <Setter Property="MouseOverBackground" Value="{StaticResource ButtonMouseOverBackground}"/>
        <Setter Property="MouseOverForeground" Value="{StaticResource ButtonMouseOverForeround}"/>
        <Setter Property="MouseOverBorderBrush" Value="{StaticResource ButtonMouseOverBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="GCornerRadius" Value="0"/>
        <Setter Property="GIconMargin" Value="2"/>
        <!--设置窗体自定义模板-->
        <Setter Property="Template" Value="{StaticResource ButtonBaseTemplate}"/>
    </Style>

    <!-- 继承自DefaultButtonStyle，支持SVG格式-->
    <Style x:Key="DefaultGeometryButtonStyle" TargetType="{x:Type tgp:GButton}" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Width" Value="30" />
        <Setter Property="AllowsAnimation" Value="True"/>
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultButtonForeground}" />
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="PressedBackground" Value="{x:Null}"/>
        <Setter Property="PressedForeground" Value="{StaticResource ButtonPressedForeround}"/>
        <Setter Property="PressedBorderBrush" Value="{x:Null}"/>
        <Setter Property="MouseOverBackground" Value="{x:Null}"/>
        <Setter Property="MouseOverForeground" Value="{StaticResource ButtonMouseOverForeround}"/>
        <Setter Property="MouseOverBorderBrush" Value="{x:Null}"/>
        <Setter Property="Template" Value="{StaticResource ButtonGeometryBaseTemplate}"/>
    </Style>
    <!--继承自DefaultButtonStyle，支持SVG格式，无旋转动画-->
    <Style x:Key="DefaultGeometryNoAnimationButtonStyle" TargetType="{x:Type tgp:GButton}" BasedOn="{StaticResource DefaultGeometryButtonStyle}">
        <Setter Property="AllowsAnimation" Value="False"/>
    </Style>

    <!--派生自DefaultButtonStyle的图片按钮-->
    <Style x:Key="DefaultNoImageButtonStyle" TargetType="{x:Type tgp:GButton}" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="IconWidth" Value="0"/>
        <Setter Property="IconHeight" Value="0"/>
    </Style>

    <Style x:Key="DefaultImageButtonStyle" TargetType="{x:Type tgp:GButton}" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Margin" Value="2"/>
        <Setter Property="AllowsAnimation" Value="False"/>
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultButtonForeground}" />
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="PressedBackground" Value="{x:Null}"/>
        <Setter Property="PressedForeground" Value="{x:Null}"/>
        <Setter Property="PressedBorderBrush" Value="{StaticResource ButtonPressedBorderBrush}"/>
        <Setter Property="MouseOverBackground" Value="{x:Null}"/>
        <Setter Property="MouseOverForeground" Value="{x:Null}"/>
        <Setter Property="MouseOverBorderBrush" Value="{StaticResource ButtonMouseOverBorderBrush}"/>
        <Setter Property="Template" Value="{StaticResource ButtonImageBaseTemplate}"/>
		<Setter Property="Padding" Value="0"/>
    </Style>
    <!--所有按钮默认样式-->
    <Style TargetType="{x:Type tgp:GButton}" BasedOn="{StaticResource DefaultButtonStyle}"/>
    <Style x:Key="TransparentButtonStyle" TargetType="{x:Type tgp:GButton}" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource DefaultButtonForeground}" />
        <Setter Property="BorderBrush" Value="{StaticResource DefaultButtonBorderBrush}"/>
    </Style>

    <!--默认关闭按钮样式，红色背景-->
    <Style x:Key="DefaultClosedButtonStyle"  TargetType="{x:Type tgp:GButton}" BasedOn="{StaticResource TransparentButtonStyle}">
        <Setter Property="IconWidth" Value="16"/>
        <Setter Property="IconHeight" Value="16"/>
        <Setter Property="GIconMargin" Value="5"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="AllowsAnimation" Value="True"/>
        <Setter Property="PressedBackground" Value="#AF1515"/>
        <Setter Property="MouseOverBackground" Value="#AF1515"/>
        <Setter Property="GIcon" Value="../images/tgp_closed.png" />
    </Style>
    <!--最小化窗体按钮样式-->
    <Style x:Key="DefaultMinButtonStyle"  TargetType="{x:Type tgp:GButton}" BasedOn="{StaticResource TransparentButtonStyle}">
        <Setter Property="IconWidth" Value="16"/>
        <Setter Property="IconHeight" Value="16"/>
        <Setter Property="GIconMargin" Value="0,10,0,0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="AllowsAnimation" Value="False"/>
        <Setter Property="PressedBackground" Value="Gray"/>
        <Setter Property="MouseOverBackground" Value="Gray"/>
        <Setter Property="GIcon" Value="../images/tgp_min.png"/>
    </Style>
    <!--最大化窗体按钮样式-->
    <Style x:Key="DefaultMaxButtonStyle"  TargetType="{x:Type tgp:GButton}" BasedOn="{StaticResource TransparentButtonStyle}">
        <Setter Property="IconWidth" Value="16"/>
        <Setter Property="IconHeight" Value="16"/>
        <Setter Property="GIconMargin" Value="5"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="AllowsAnimation" Value="False"/>
        <Setter Property="GIcon" Value="../images/tgp_max.png"/>
        <Setter Property="PressedBackground" Value="Gray"/>
        <Setter Property="MouseOverBackground" Value="Gray"/>
        <Setter Property="GToggleIcon" Value="../images/tgp_max_normal.png"/>
    </Style>
</ResourceDictionary>