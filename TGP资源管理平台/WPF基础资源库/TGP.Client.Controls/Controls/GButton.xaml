<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"
					xmlns:tgp="clr-namespace:TGP.UI.Core.Controls"
                    >
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/TGP.UI.Core;component/Styles/Themes/GColor.xaml" />
		<ResourceDictionary Source="pack://application:,,,/TGP.UI.Core;component/Styles/Themes/GIcon.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<!-- TGP腾讯游戏平台自定义按钮 -->

	<!--GButton模板-->
	<ControlTemplate x:Key="GButton_Template" TargetType="tgp:GButton">
		<Border x:Name="gBorder" Background="{ Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path= Background}" 
													Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Width}"
													Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Height}"
													CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CornerRadius}"
													BorderBrush="{TemplateBinding BorderBrush}"
													BorderThickness="{TemplateBinding BorderThickness}">
			<StackPanel Orientation="Horizontal" 
				VerticalAlignment="Center" Margin="{TemplateBinding Padding}" 
				HorizontalAlignment="{TemplateBinding  HorizontalContentAlignment}">
				<TextBlock x:Name="icon"  Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IconMargin}" 
                           RenderTransformOrigin="0.5,0.5" Style="{StaticResource GIcon}"
                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= GIcon}"
                           FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= IconSize}" 
                           Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Foreground}" HorizontalAlignment="Center">
					<TextBlock.RenderTransform>
						<RotateTransform x:Name="transIcon" Angle="0"/>
					</TextBlock.RenderTransform>
				</TextBlock>

				<TextBlock VerticalAlignment="Center"  x:Name="txt" 
											  TextDecorations="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ContentDecorations}" 
                                              Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" 
                                              FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FontSize}" 
                                              Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}"/>
			</StackPanel>
		</Border>
		<!--触发器-->
		<ControlTemplate.Triggers>
			<!--设置鼠标进入时的背景、前景样式-->
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=MouseOverBackground}" TargetName="gBorder" />
				<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=MouseOverForeground}" TargetName="icon"/>
				<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=MouseOverForeground}" TargetName="txt"/>
			</Trigger>
			<!--Ficon的动画触发器-->
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsMouseOver" Value="true"></Condition>
					<Condition Property="AllowsAnimation" Value="true"></Condition>
				</MultiTrigger.Conditions>
				<MultiTrigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="180" Duration="0:0:0.2" />
						</Storyboard>
					</BeginStoryboard>
				</MultiTrigger.EnterActions>
				<MultiTrigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.2" />
						</Storyboard>
					</BeginStoryboard>
				</MultiTrigger.ExitActions>
			</MultiTrigger>
			<!--鼠标按下时的前景、背景样式-->
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=PressedBackground}" TargetName="gBorder" />
				<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=PressedForeground}" TargetName="icon"/>
				<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=PressedForeground}" TargetName="txt"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Opacity" Value="0.5" TargetName="gBorder"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!--TGPButton按钮默认按钮样式-->
	<Style x:Key="DefaultGButtonStyle" TargetType="tgp:GButton">
		<!--TGPButton控件默认依赖属性-->
		<Setter Property="Background" Value="{StaticResource ButtonBackground}"/>
		<Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="Width" Value="200" />
		<Setter Property="Height" Value="30" />
		<Setter Property="FontSize" Value="13" />
		<Setter Property="Template" Value="{StaticResource GButton_Template}"/>
		<Setter Property="Padding" Value="3,1,3,1" />
		<Setter Property="Content" Value="{x:Null}" />
		<!--TGPButton控件自定义依赖属性-->
		<Setter Property="MouseOverBackground" Value="{StaticResource ButtonMouseOverBackground}" />
		<Setter Property="MouseOverForeground" Value="{StaticResource ButtonMouseOverForeground}" />
		<Setter Property="PressedBackground" Value="{StaticResource ButtonPressedBackground}" />
		<Setter Property="PressedForeground" Value="{StaticResource ButtonPressedForeground}" />
		<Setter Property="IconMargin" Value="0,0,5,0" />
		<Setter Property="AllowsAnimation" Value="False" />
		<Setter Property="CornerRadius" Value="0" />
		<Setter Property="IconSize" Value="16" />
	</Style>

	<!--设置所有按钮默认样式-->
	<Style TargetType="{x:Type tgp:GButton}" BasedOn="{StaticResource DefaultGButtonStyle}"/>
</ResourceDictionary>